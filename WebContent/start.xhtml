<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" 
	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">

<html xmlns="http://www.w3.org/1999/xhtml"
	xmlns:ui="http://java.sun.com/jsf/facelets"
	xmlns:h="http://java.sun.com/jsf/html"
	xmlns:f="http://java.sun.com/jsf/core"
	xmlns:p="http://primefaces.org/ui">

<h:head>
	<!-- 	needed for java script and primefaces fileupload advanved -->
	<title>WebHERV - Start</title>
</h:head>

<h:body id="entirePage">

	<h:outputStylesheet library="css" name="style.css" />

	<p:blockUI block=":entirePage" widgetVar="bui" />

	<p:growl id="growl" showDetail="true" sticky="true" />

	<!-- Header of the page -->
	<h1 id="mainHeadline">WebHERV</h1>

	<!-- main description  -->
	<p:panel id="explainPanel">
	<!-- <p id="explainPara">This program enables you to analyze the
			association between human endogenous retrovirus (HERV) sequences and HERV-like and
			a set of genome coordinates. For instance, these coordinates can be
			obtained from RNAseq or micro-array based gene expression profiling
			experiments. The server allows uploading of files with probe set IDs
			(the current version accepts only Affymetrix Human Exon 1.0 ST
			arrays) or files with genome coordinates. The program will analyze
			each file separately for HERV sequences located in the neighborhood
			of these probe sets or genome coordinates..</p> -->
		<p id="explainPanel">
		This website (available also as a standalone program) enables you to 
		test for proximity of human endogenous retrovirus (HERV) sequences in 
		the genome to differentially expressed genes, the latter uploaded 
		either as genome coordinates or Affymetrix microarray IDs
		</p>
			
		<p id="expl_link">For detailed information see Kruse K, Nettling
			M, Wappler N, Emmer A, Kornhuber M, Staege MS, Grosse I. 2018.
			WebHERV: A web-server for the computational investigation of gene
			expression associated with human endogenous retroviruses. Front
			Microbiol. submitted.</p>

		<p id="code_links">
			<h:outputText
				value="A tutorial for server development and the code for this server can be found here: " />
			<p:link value="Tutorial and code at GitHub"
				href="https://github.com/etsnok/WebHERV" target="_blank" />
			<br />
			<h:outputText
				value="Step-by-step user instructions can be found here: " />
			<p:link value="Instructions"
				href="/resources/docs/InstructionsWebHERV.pdf" target="_blank" />

		</p>
	</p:panel>

	<h:form name="settingsForm" id="settingsFormId"
		enctype="multipart/form-data">

		<p:panelGrid header="Parameter settings" styleClass="settingsPanel"
			style="margin-top:20px" id="parameterPanel">

			<!--  layout="grid" -->
			<f:facet name="header" styleClass="settingsPanel">
				<p:row>
					<p:column>Settings</p:column>
					<p:column>Descriptions</p:column>
				</p:row>
			</f:facet>

			<!-- 			<p:row> -->
			<!-- 				<p:column> -->
			<!-- 					<h:outputLabel for="variants" value="Variants:" /> -->
			<!-- 					<p:selectOneRadio id="variants" columns="2" -->
			<!-- 						value="#{userInput.selectedVariant}"> -->
			<!-- 						<f:selectItems var="v" value="#{userInput.variants}" -->
			<!-- 							itemLabel="#{v.label}" itemValue="#{v.id}" /> -->
			<!-- 					</p:selectOneRadio> -->
			<!-- 				</p:column> -->
			<!-- 				<p:column> -->
			<!-- 					The user can select here between the two variants of association. -->
			<!-- 					Variant 1 searches for HERVs in the offset around the probeset. -->
			<!-- 					Variant 2 searches the next located HERV. -->
			<!-- 				</p:column> -->
			<!-- 			</p:row> -->

			<!-- 			<p:row> -->
			<!-- 				<p:column colspan="2" styleClass="ui-widget-header"> -->
			<!-- 					<p:spacer height="0" /> -->
			<!-- 				</p:column> -->
			<!-- 			</p:row> -->

			<p:row>
				<p:column>
					<h:outputLabel for="ranges" value="Area:" />
					<p:selectOneRadio id="ranges" value="#{userInput.selectedRange}"
						layout="pageDirection" style="width:125px margin-bottom:10px"
						cellpadding="5">
						<f:selectItems var="range" value="#{userInput.ranges}"
							itemLabel="#{range.value}" itemValue="#{range.value}" />
					</p:selectOneRadio>
				</p:column>
				<p:column styleClass="col_description">
				The 'Area' defines the region around the genome coordinates or probe set 
				coordinates in which the program will search for HERV sequences. 
				<ul>
						<li>Area 'overlap': the program will search for HERV
							sequences upstream and downstream of the probe set or genome
							coordinates.</li>
						<li>Area 'downstream': the program will only search for HERV
							sequences downstream (3') of the probe set or genome coordinates.</li>
						<li>Area 'upstream', the program will only search for HERV
							sequences upstream (5') of the probe set or genome coordinates.</li>
					</ul>

				</p:column>
			</p:row>

			<p:row>
				<p:column colspan="2">

				</p:column>
			</p:row>

			<p:row>
				<p:column>
					<h:outputLabel for="rangeSize" value="Distance:" />
					<br />
					<p:inputText id="rangeSize" value="#{userInput.offset}"
						validatorMessage="Range size must a '#{userInput.offsetListSeparator}' separated list of numbers.">
						<f:validateRegex pattern="#{userInput.offsetListRegex}" />
						<p:clientValidator event="keyup" />
					</p:inputText>
					<p:message for="rangeSize" display="icon" />
				</p:column>
				<p:column styleClass="col_description">
					'Distance' defines the region (in base pairs) of the DNA 
					around the probe set or genome coordinates which is analyzed 
					for presence of HERV sequences. It is possible to enter a 
					comma-separated list of values to analyze multiple distances 
					at once (e.g.: 100, 1000, 10000).
				</p:column>
			</p:row>

			<p:row>
				<p:column colspan="2">

				</p:column>
			</p:row>

			<p:row>
				<p:column>
					<h:outputLabel for="minimalLength" value="Minimal sequence length:" />
					<br />
					<p:inputText id="minimalLength"
						validatorMessage="Minimal sequence length must be greater #{userInput.minimalLengthMin}!"
						value="#{userInput.minimalLength}">
						<f:validateDoubleRange minimum="#{userInput.minimalLengthMin}"
							maximum="#{userInput.minimalLengthMax}" />
						<p:clientValidator event="keyup" />
					</p:inputText>
					<p:message for="minimalLength" display="icon" />
				</p:column>
				<p:column styleClass="col_description">The 'Minimal sequence length' is the length that a (putative) HERV-derived sequence must have.</p:column>
			</p:row>

			<p:row>
				<p:column colspan="2">

				</p:column>
			</p:row>

			<p:row>
				<p:column>
					<h:outputLabel for="maxEvalue" value="Maximal HERV e-value:" />
					<br />
					<h:outputLabel for="maxEvalue" value="1.0E-" />
					<p:inputText id="maxEvalue" value="#{userInput.maxEvalueExp}"
						validatorMessage="Maximal e-value must be between #{userInput.maxEvalueExpMin} and #{userInput.maxEvalueExpMax}!">
						<f:validateDoubleRange minimum="#{userInput.maxEvalueExpMin}"
							maximum="#{userInput.maxEvalueExpMax}" />
						<p:clientValidator event="keyup" />
					</p:inputText>
					<p:message for="maxEvalue" display="icon" />
				</p:column>
				<p:column styleClass="col_description">The "Maximal HERV e-value" is the expect value that is allowed for sequences to be considered as HERV derived.</p:column>
			</p:row>

			<p:row>
				<p:column colspan="2">

				</p:column>
			</p:row>

			<!-- 			<p:row> -->
			<!-- 				<p:column> -->
			<!-- 					<h:outputLabel for="platformItem" value="Platform:" /> -->
			<!-- 					<br /> -->
			<!-- 					<p:selectOneMenu id="platformItem" -->
			<!-- 						value="#{userInput.selectedPlatform}"> -->
			<!-- 						<f:selectItems var="p" value="#{userInput.platforms}" -->
			<!-- 							itemLabel="#{p.label}" itemValue="#{p.id}" /> -->
			<!-- 					</p:selectOneMenu> -->

			<!-- 				</p:column> -->
			<!-- 				<p:column styleClass="col_description"> -->
			<!-- 					'Platform' allows the selection of different combinations of genome versions (HG18, HG19) and arrays (currently only Affymetrix Human Exon 1.0 ST library version 2). -->
			<!-- 				</p:column> -->
			<!-- 			</p:row> -->

			<!-- 			<p:row> -->
			<!-- 				<p:column colspan="2"> -->

			<!-- 				</p:column> -->
			<!-- 			</p:row> -->




			<!-- === TABULATOR ============================================== -->
			<p:row>

				<p:column colspan="2">
				
					<div align="center" style="margin:10px">
    					<h:outputText value="Please select only Genome coordinates OR Probe set IDs for upload" />
					</div>
				
					<p:tabView id="uploadsTab">

						<p:ajax event="tabChange"
							listener="#{inputController.onTabChange}" update="@this" />

						<!-- === Genome Coordinates Tab ========================================= -->
						<p:tab title="Genome coordinates" id="coordinatesTab">

							<p:panelGrid style="margin-bottom:20px"
								id="selectGenomePanelGrid">

								<p:row>
									<p:column>
										<h:outputLabel for="genomeItem" value="Genome:" />
										<br />
										<p:selectOneMenu id="genomeItem"
											value="#{userInput.selectedDrums}">
											<f:selectItems var="p" value="#{userInput.drumsDirs}"
												itemLabel="#{p.label}" itemValue="#{p.id}" />
										</p:selectOneMenu>

									</p:column>
									<p:column styleClass="col_description">
										'Genome' allows the selection of different genome 
										versions (currently available: HG18, HG19, RepeatMasker LTRs HG19) for 
										the coordinates of HERV-like sequences.
									</p:column>
								</p:row>

							</p:panelGrid>

							<h:outputText
								value="Here you can upload genome coordinates of your differentially expressed genes in the selected genome version (HG18, HG19 or RepeatMasker LTRs HG19)." />
							<ul>
								<li>Each line must contain only one genome position.</li>
								<li>Format: chromosome[TAB]start[TAB]end[TAB]strand.</li>
								<li>chromosome: chr1, chr2, ..., chrY.</li>
								<li>strand: 1 or -1.</li>
							</ul>
							<ul>
								<li>Press 'Choose' to select a file.</li>
								<li>Press 'Upload' to upload the files.</li>
							</ul>


							<p:fileUpload id="coordinatesUpload" sequential="true"
								update="test growl"
								fileUploadListener="#{inputController.handleCoordinatesFileUpload}"
								mode="advanced" dragDropSupport="false" multiple="true"
								fileLimit="10" />

							<p:panel id="test">

								<p:tabView value="#{genomePosTabsView.genomePosTabs}"
									rendered="#{not empty genomePosTabsView.genomePosTabs}"
									id="genomePosTabView" var="genomeTab"
									activeIndex="#{genomePosTabsView.tabIndex}">

									<p:ajax event="tabClose"
										listener="#{genomePosTabsView.onTabClose}" />

									<p:tab title="#{genomeTab.filename}" closable="true"
										id="genomePosFilesTab">

										<p:dataTable var="pos" value="#{genomeTab.genomePos}"
											scrollable="true" scrollHeight="150">
											<p:column headerText="Chromosome">
												<h:outputText value="#{pos.chromosome}" />
											</p:column>

											<p:column headerText="Start">
												<h:outputText value="#{pos.start}" />
											</p:column>

											<p:column headerText="End">
												<h:outputText value="#{pos.end}" />
											</p:column>

											<p:column headerText="Strand">
												<h:outputText value="#{pos.strand}" />
											</p:column>
										</p:dataTable>

									</p:tab>
								</p:tabView>

								<p:commandButton value="Submit positions" id="submitPosButton"
									action="#{inputController.submitUpload}"
									update="coordinatesTab"
									disabled="#{empty genomePosTabsView.genomePosTabs}" />

							</p:panel>

							<!-- Example File Upload -->
							<h:outputText value="Example genome coordinates file:" />
							<br />
							<ul>
								<li><p:link value="Example_coordinates_B"
										href="/resources/example_files/Example_coordinates_B.txt"
										target="_blank" /> <h:outputText
										value=" : genome coordinates of probe sets up-regulated in normal blood cells in comparison to Hodgkin lymphoma cells." />

								</li>
								<li><p:link value="Example_coordinates_H"
										href="/resources/example_files/Example_coordinates_H.txt"
										target="_blank" /> <h:outputText
										value=" : genome coordinates of probe sets up-regulated in Hodgkin lymphoma cells in comparison to normal blood cells." />
								</li>
							</ul>

						</p:tab>


						<p:tab title="Probe set IDs" id="probesetsTab">

							<p:panelGrid style="margin-bottom:20px">

								<p:row>
									<p:column>
										<h:outputLabel for="platformItem" value="Platform:" />
										<br />
										<p:selectOneMenu id="platformItem"
											value="#{userInput.selectedPlatform}">
											<f:selectItems var="p" value="#{userInput.platforms}"
												itemLabel="#{p.label}" itemValue="#{p.id}" />
										</p:selectOneMenu>

									</p:column>
									<p:column styleClass="col_description">
												'Platform' allows the selection of different combinations of genome versions (HG18, HG19, RepeatMasker LTRs HG19) and arrays (currently only Affymetrix Human Exon 1.0 ST library version 2).
									</p:column>
								</p:row>

							</p:panelGrid>


							<h:outputText
								value="Here you can upload lists with probe set IDs of your differentially expressed genes in the selected genome version (HG18, HG19 or RepeatMasker LTRs HG19)." />
							<ul>
								<li>Press 'Choose' to select a file.</li>
								<li>Press 'Upload' to upload the files.</li>
							</ul>

							<p:messages id="fileUploadMsg" autoUpdate="true" closable="true" />

							<p:fileUpload id="fileIdPhoto"
								update="uploadedFilesPanel growl fileUploadMsg submitFilesButton"
								sequential="true"
								fileUploadListener="#{inputController.handleFileUpload}"
								mode="advanced" dragDropSupport="false" multiple="true"
								fileLimit="10" />

							<!-- === FILE UPLAOD ============================================== -->
							<p:panel id="uploadedFilesPanel">

								<ul style="list-style-type: none">
									<li>After uploading the file(s) press 'Submit files' to
										start the analysis.</li>
								</ul>

								<p:dataTable
									rendered="#{not empty fileUploader.uploadedGeneLists}"
									id="uploadedFilesList"
									value="#{fileUploadView.uploadedFileNames}" var="file"
									type="ordered" tableStyle="table-layout: auto;">
									<f:facet name="header">Uploaded files</f:facet>
									<p:column>
										<h:outputText value="#{file}" />
									</p:column>
									<p:column style="width:10px;">
										<p:commandLink update="uploadedFilesList"
											actionListener="#{fileUploadView.deleteFileByName(file)}"
											title="Delete file" styleClass="ui-icon ui-icon-close"
											style="float:left;margin-right:10px">
										</p:commandLink>
									</p:column>
								</p:dataTable>

								<p:commandButton value="Submit files" id="submitFilesButton"
									action="#{inputController.submitUpload}"
									update="uploadedFilesPanel probesetsTab"
									disabled="#{empty fileUploader.uploadedGeneLists}" />

							</p:panel>

							<!-- Example File Upload -->
							<h:outputText value="Example probe set ID files:" />
							<ul>
								<li><p:link value="Example_probe_set_file_H"
										href="/resources/example_files/Example_probe_set_file_H.txt"
										target="_blank" /> <h:outputText
										value=" : IDs from probe sets up-regulated in Hodgkin lymphoma cells in comparison to normal blood cells." />
								</li>
								<li><p:link value="Example_probe_set_file_B"
										href="/resources/example_files/Example_probe_set_file_B.txt"
										target="_blank" /> <h:outputText
										value=" : IDs from probe sets up-regulated in normal blood cells in comparison to Hodgkin lymphoma cells." />
								</li>
							</ul>
						</p:tab>

					</p:tabView>

				</p:column>
			</p:row>



			<!-- === FILE UPLAOD ============================================== -->
			<!-- 			<p:row> -->
			<!-- 				<p:column colspan="2"> -->

			<!-- 					<p:messages id="fileUploadMsg" autoUpdate="true" closable="true" /> -->

			<!-- 					<h:outputText -->
			<!-- 						value="Upload lists with probe set IDs of the selected platform:" /> -->
			<!-- 					<ul> -->
			<!-- 						<li>Press 'Choose' to select a file.</li> -->
			<!-- 						<li>Press 'Upload' to upload the files.</li> -->
			<!-- 					</ul> -->
			<!-- 					<p:fileUpload id="fileIdPhoto" -->
			<!-- 						update="uploadedFilesPanel growl fileUploadMsg submitFilesButton" -->
			<!-- 						sequential="true" -->
			<!-- 						fileUploadListener="#{inputController.handleFileUpload}" -->
			<!-- 						mode="advanced" dragDropSupport="false" multiple="true" -->
			<!-- 						fileLimit="10" /> -->

			<!-- 				</p:column> -->
			<!-- 			</p:row> -->

			<!-- === SUBMIT BUTTON ============================================ -->
			<p:row>
				<p:column colspan="2">

					<!-- 					<p:panel id="uploadedFilesPanel"> -->

					<!-- 						<ul style="list-style-type: none"> -->
					<!-- 							<li>After uploading the file(s) press 'Submit files' to -->
					<!-- 								start the analysis.</li> -->
					<!-- 						</ul> -->

					<!-- 						<p:dataTable -->
					<!-- 							rendered="#{not empty fileUploader.uploadedGeneLists}" -->
					<!-- 							id="uploadedFilesList" -->
					<!-- 							value="#{fileUploadView.uploadedFileNames}" var="file" -->
					<!-- 							type="ordered" tableStyle="table-layout: auto;"> -->
					<!-- 							<f:facet name="header">Uploaded files</f:facet> -->
					<!-- 							<p:column> -->
					<!-- 								<h:outputText value="#{file}" /> -->
					<!-- 							</p:column> -->
					<!-- 							<p:column style="width:10px;"> -->
					<!-- 								<p:commandLink update="uploadedFilesList" -->
					<!-- 									actionListener="#{fileUploadView.deleteFileByName(file)}" -->
					<!-- 									title="Delete file" styleClass="ui-icon ui-icon-close" -->
					<!-- 									style="float:left;margin-right:10px"> -->
					<!-- 								</p:commandLink> -->
					<!-- 							</p:column> -->
					<!-- 						</p:dataTable> -->

					<!-- 						<p:commandButton value="Submit files" id="submitFilesButton" -->
					<!-- 							action="#{inputController.submitUpload}" -->
					<!-- 							update="uploadedFilesPanel" -->
					<!-- 							disabled="#{empty fileUploader.uploadedGeneLists}" /> -->

					<!-- 					</p:panel> -->
				</p:column>

				<p:ajaxStatus onstart="PF('statusDialog').show();"
					onsuccess="PF('statusDialog').hide();"
				 />

				<p:dialog widgetVar="statusDialog" id="statusDialogId" modal="true" draggable="false"
					closable="false" resizable="false" showHeader="false">
					<p:graphicImage value="/resources/images/ajaxloadingbar.gif" />
<!-- 					<h:outputText id="statusTxt" rendered="#{inputController.hervServiceStatus != null}" -->
<!-- 									value="Files: #{inputController.hervServiceStatus.uploadedFiles}"/> -->
<!-- 					<p:poll interval="1" widgetVar="statusPoller" update="statusTxt" autoStart="false"/> -->
				</p:dialog>


			</p:row>

		</p:panelGrid>

<!--		<p:poll interval="1" async="true" widgetVar="statusPoller" update="statusTxt" autoStart="false"/>-->

	</h:form>


</h:body>
</html>
